<?xml version="1.0" encoding="UTF-8"?>
<Entities
 universal="password">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         enabled="true"
         homeMashup=""
         identifier=""
         inheritedValueStream=""
         name="IK.SupplyObjectsLibrary.Thing"
         projectName="IKEA.CVM"
         published="false"
         tags=""
         thingTemplate="GenericThing"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions></PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="addSubSupplierToDatabase">
                        <ResultType
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="address"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="country"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="duns_number"
                             ordinal="8"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="gln_code"
                             ordinal="9"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="latitude"
                             ordinal="7"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="legal_code"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="legal_name"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="longitude"
                             ordinal="8"></FieldDefinition>
                            <FieldDefinition
                             baseType="INTEGER"
                             description=""
                             name="supplier_id"
                             ordinal="4"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="archiveSupplyObject">
                        <ResultType
                         baseType="BOOLEAN"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="supply_object_oid"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="createSupplyObject">
                        <ResultType
                         baseType="BOOLEAN"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="actor_type"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="address"
                             ordinal="8"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="bu_code_owner"
                             ordinal="19"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="bu_type"
                             ordinal="18"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="country"
                             ordinal="9"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="duns_number"
                             ordinal="7"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="gln_code"
                             ordinal="12"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="latitude"
                             ordinal="10"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="legal_code"
                             ordinal="13"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="legal_name"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="longitude"
                             ordinal="11"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="name"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="object_type"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="production_unit"
                             ordinal="16"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="project_name"
                             ordinal="14"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="project_number"
                             ordinal="15"></FieldDefinition>
                            <FieldDefinition
                             baseType="INTEGER"
                             description=""
                             name="supplier_id"
                             ordinal="20"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="trade_good_id"
                             ordinal="17"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="type"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="type_of_operation"
                             ordinal="5"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="createTransportSupplyObject">
                        <ResultType
                         baseType="BOOLEAN"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="actor_type"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="address"
                             ordinal="8"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="bu_code_owner"
                             ordinal="19"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="bu_type"
                             ordinal="18"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="country"
                             ordinal="9"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="duns_number"
                             ordinal="7"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="gln_code"
                             ordinal="12"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="latitude"
                             ordinal="10"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="legal_code"
                             ordinal="13"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="legal_name"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="longitude"
                             ordinal="11"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="name"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="object_type"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="production_unit"
                             ordinal="16"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="project_name"
                             ordinal="14"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="project_number"
                             ordinal="15"></FieldDefinition>
                            <FieldDefinition
                             baseType="INTEGER"
                             description=""
                             name="supplier_id"
                             ordinal="20"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="trade_good_id"
                             ordinal="17"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="type"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.dataShape="GenericStringList"
                             baseType="INFOTABLE"
                             description=""
                             name="type_of_operation"
                             ordinal="5"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="editSupplyObject">
                        <ResultType
                         baseType="BOOLEAN"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="actor_type"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="address"
                             ordinal="8"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="country"
                             ordinal="9"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="duns_number"
                             ordinal="7"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="gln_code"
                             ordinal="12"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="latitude"
                             ordinal="10"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="legal_code"
                             ordinal="13"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="legal_name"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="longtitude"
                             ordinal="11"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="name"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="object_type"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="production_unit"
                             ordinal="16"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="supply_object_oid"
                             ordinal="17"></FieldDefinition>
                            <FieldDefinition
                             aspect.dataShape="IK.SupplyObject.DataShape"
                             baseType="INFOTABLE"
                             description=""
                             name="supplyObject"
                             ordinal="18"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="trade_good_id"
                             ordinal="17"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="type"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="type_of_operation"
                             ordinal="5"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="filterSupplyObjects">
                        <ResultType
                         aspect.dataShape="IK.SupplyObject.DataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="searchText"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.dataShape="GenericStringList"
                             baseType="INFOTABLE"
                             description=""
                             name="status"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.dataShape="IK.SupplyObject.DataShape"
                             baseType="INFOTABLE"
                             description=""
                             name="supplyObjects"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getActorTypes">
                        <ResultType
                         aspect.dataShape="IK.KeyValuePair.DataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INTEGER"
                             description=""
                             name="trade_good_type_id"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getCompanyDetails">
                        <ResultType
                         aspect.dataShape="IK.SupplyObject.DataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.dataShape="CVM.SearchCompany.DataShape"
                             baseType="INFOTABLE"
                             description=""
                             name="company_details"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getCountry">
                        <ResultType
                         aspect.dataShape="GenericStringList"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getObjectTypes">
                        <ResultType
                         aspect.dataShape="IK.KeyValue.DataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getProductionUnit">
                        <ResultType
                         aspect.dataShape="GenericStringList"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="sub_supplier_id"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getSubSupplierDetails">
                        <ResultType
                         aspect.dataShape="IK.SupplyObject.DataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="NUMBER"
                             description=""
                             name="supplier_id"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getSuggestedCompany">
                        <ResultType
                         aspect.dataShape="CVM.SearchCompany.DataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="company_name"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="{&quot;result&quot;:{&quot;searchCandidates&quot;:[{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:136770378}]}],&quot;dunsControlStatus&quot;:{&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;primaryName&quot;:&quot;REDHA ALANSARI EXCHANGE - FUJ. BRANCH&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:9421,&quot;registrationNumber&quot;:&quot;1011802&quot;,&quot;typeDescription&quot;:&quot;Business Registration Number (AE)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;999990&quot;,&quot;description&quot;:&quot;Unclassified Establishments&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;99990000&quot;,&quot;description&quot;:&quot;Nonclassifiable establishments&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;195&quot;,&quot;description&quot;:&quot;Nonclassifiable Establishments&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;9999&quot;,&quot;usSicV4Description&quot;:&quot;Nonclassified establishment&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9093,&quot;value&quot;:150,&quot;reliabilityDescription&quot;:&quot;Estimated&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:true,&quot;globalUltimateFamilyTreeMembersCount&quot;:54,&quot;familytreeRolesPlayed&quot;:[{&quot;description&quot;:&quot;Branch/Division&quot;,&quot;dnbCode&quot;:9140}],&quot;headQuarter&quot;:{&quot;duns&quot;:&quot;561780474&quot;,&quot;primaryName&quot;:&quot;AL ANSARI EXCHANGE - SOLE PROPRIETORSHIP L.L.C&quot;},&quot;globalUltimate&quot;:{&quot;duns&quot;:&quot;561428144&quot;,&quot;primaryName&quot;:&quot;ALANSARI HOLDING LLC&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;isoAlpha2Code&quot;:&quot;AE&quot;}}}},&quot;mailingAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;PO Box 7421&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Dubai&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Dubai&quot;}},&quot;isStandalone&quot;:false,&quot;duns&quot;:&quot;561431518&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;G055&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Dubai&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Dubai&quot;}}},&quot;displaySequence&quot;:1},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:5019000}]}],&quot;dunsControlStatus&quot;:{&quot;subjectHandlingDetails&quot;:[{&quot;description&quot;:&quot;Skeletal Record&quot;,&quot;dnbCode&quot;:9161}],&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:true,&quot;isMarketable&quot;:false,&quot;isTelephoneDisconnected&quot;:false},&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;548484099&quot;,&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;5946158989&quot;,&quot;isdCode&quot;:&quot;86&quot;}],&quot;primaryName&quot;:&quot;Changtai Town Telecommunication Station, Telecommunication Bureau of Putian, Fuj&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;China&quot;,&quot;isoAlpha2Code&quot;:&quot;CN&quot;}},&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;517810&quot;,&quot;description&quot;:&quot;All Other Telecommunications&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;48990000&quot;,&quot;description&quot;:&quot;Communication services, nec&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;193&quot;,&quot;description&quot;:&quot;Wireless Telecommunications Carriers&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;4899&quot;,&quot;usSicV4Description&quot;:&quot;Communication services&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:11,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:11,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}]},&quot;displaySequence&quot;:2},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:4822800}]}],&quot;dunsControlStatus&quot;:{&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Corporation&quot;,&quot;dnbCode&quot;:451},&quot;primaryName&quot;:&quot;FUJ INTERNATIONAL COMPANY LIMITED&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:9405,&quot;registrationNumber&quot;:&quot;4030236292&quot;,&quot;typeDescription&quot;:&quot;Business Registration Number (SA)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;339950&quot;,&quot;description&quot;:&quot;Sign Manufacturing&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;39930000&quot;,&quot;description&quot;:&quot;Signs and advertising specialties&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;107&quot;,&quot;description&quot;:&quot;Miscellaneous Manufacturing&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;3993&quot;,&quot;usSicV4Description&quot;:&quot;Mfg signs/advertising specialties&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:50,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:50,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;557857009&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;Saudi Arabia&quot;,&quot;isoAlpha2Code&quot;:&quot;SA&quot;},&quot;addressCounty&quot;:{&quot;name&quot;:&quot;Al Khumrah&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;JCC Warehouses, Ware house # 51&quot;},&quot;postalCode&quot;:&quot;21494&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Jeddah&quot;}}},&quot;displaySequence&quot;:3},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:3472500}]}],&quot;dunsControlStatus&quot;:{&quot;subjectHandlingDetails&quot;:[{&quot;description&quot;:&quot;Skeletal Record&quot;,&quot;dnbCode&quot;:9161}],&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:true,&quot;isMarketable&quot;:false,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Corporation&quot;,&quot;dnbCode&quot;:451},&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;92228605&quot;,&quot;isdCode&quot;:&quot;971&quot;}],&quot;primaryName&quot;:&quot;Fujairah Petroleum (Fuj) Llc&quot;,&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;541990&quot;,&quot;description&quot;:&quot;All Other Professional, Scientific, and Technical Services&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;89990000&quot;,&quot;description&quot;:&quot;Services, nec&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;109&quot;,&quot;description&quot;:&quot;Miscellaneous Professional Services&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;8999&quot;,&quot;usSicV4Description&quot;:&quot;Services-misc&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:50,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:50,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;559194248&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;Location: Fujairah Free Zone&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fujairah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujairah&quot;}}},&quot;displaySequence&quot;:4},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:3456380}]}],&quot;dunsControlStatus&quot;:{&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:true},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Corporation&quot;,&quot;dnbCode&quot;:451},&quot;primaryName&quot;:&quot;FUJ (PTY) LTD&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:13244,&quot;registrationNumber&quot;:&quot;202171129207&quot;,&quot;typeDescription&quot;:&quot;Companies Registry Number (ZA)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;339999&quot;,&quot;description&quot;:&quot;All Other Miscellaneous Manufacturing&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:2},{&quot;code&quot;:&quot;327211&quot;,&quot;description&quot;:&quot;Flat Glass Manufacturing&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;39990000&quot;,&quot;description&quot;:&quot;Manufacturing industries, nec&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:2},{&quot;code&quot;:&quot;32110000&quot;,&quot;description&quot;:&quot;Flat glass&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;128&quot;,&quot;description&quot;:&quot;Non-Metallic Mineral Product Manufacturing&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;3211&quot;,&quot;usSicV4Description&quot;:&quot;Mfg flat glass&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:20,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:20,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;mailingAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;South Africa&quot;,&quot;isoAlpha2Code&quot;:&quot;ZA&quot;},&quot;streetAddress&quot;:{&quot;line2&quot;:&quot;KUILSRIVER WESTERN CAPE&quot;,&quot;line1&quot;:&quot;4 MOUTON ST&quot;},&quot;postalCode&quot;:&quot;7580&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;KUILS RIVER&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Western Cape&quot;,&quot;abbreviatedName&quot;:&quot;WC&quot;}},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;655409984&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;South Africa&quot;,&quot;isoAlpha2Code&quot;:&quot;ZA&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;4 MOUTON ST, KUILSRIVER WESTERN CAPE&quot;},&quot;postalCode&quot;:&quot;7580&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;KUILS RIVER&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Western Cape&quot;,&quot;abbreviatedName&quot;:&quot;WC&quot;}}},&quot;displaySequence&quot;:5},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:2768000}]}],&quot;dunsControlStatus&quot;:{&quot;subjectHandlingDetails&quot;:[{&quot;description&quot;:&quot;Skeletal Record&quot;,&quot;dnbCode&quot;:9161}],&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:true,&quot;isMarketable&quot;:false,&quot;isTelephoneDisconnected&quot;:false},&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;549376208&quot;,&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;59187825424&quot;,&quot;isdCode&quot;:&quot;86&quot;}],&quot;primaryName&quot;:&quot;Fujian State Technology Quality Supervision and Inspection Quarantine Bureau-Fuj ian Provincial Quality and Technical Supervision B&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;China&quot;,&quot;isoAlpha2Code&quot;:&quot;CN&quot;},&quot;postalCode&quot;:&quot;350003&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fuzhou&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujian&quot;}},&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;921190&quot;,&quot;description&quot;:&quot;Other General Government Support&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;91990000&quot;,&quot;description&quot;:&quot;General government, nec&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;64&quot;,&quot;description&quot;:&quot;Executive and Legislature&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;9199&quot;,&quot;usSicV4Description&quot;:&quot;General government&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:11,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:11,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}]},&quot;displaySequence&quot;:6},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:2219610}]}],&quot;dunsControlStatus&quot;:{&quot;subjectHandlingDetails&quot;:[{&quot;description&quot;:&quot;Skeletal Record&quot;,&quot;dnbCode&quot;:9161}],&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:false,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Corporation&quot;,&quot;dnbCode&quot;:451},&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;92236943&quot;,&quot;isdCode&quot;:&quot;971&quot;}],&quot;primaryName&quot;:&quot;EMIRATES INTERNATIONAL RESTAURANTS - CHILIS - FUJ. BRANCH&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:9421,&quot;registrationNumber&quot;:&quot;1011493&quot;,&quot;typeDescription&quot;:&quot;Business Registration Number (AE)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;423210&quot;,&quot;description&quot;:&quot;Furniture Merchant Wholesalers&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;50210000&quot;,&quot;description&quot;:&quot;Furniture&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;80&quot;,&quot;description&quot;:&quot;Home Furnishings Wholesale&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;5021&quot;,&quot;usSicV4Description&quot;:&quot;Whol furniture&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:15,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:15,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;mailingAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;PO Box 1443&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fujairah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujairah&quot;}},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;559194301&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;Fujairah&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fujairah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujairah&quot;}}},&quot;displaySequence&quot;:7},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:2148476}]}],&quot;dunsControlStatus&quot;:{&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:false,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Corporation&quot;,&quot;dnbCode&quot;:451},&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;505454341&quot;,&quot;isdCode&quot;:&quot;971&quot;}],&quot;primaryName&quot;:&quot;NMC Trading LLC (FUJ BRANCH)&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:9457,&quot;registrationNumber&quot;:&quot;6722&quot;,&quot;typeDescription&quot;:&quot;Chamber of Commerce Number (AE)&quot;},{&quot;typeDnBCode&quot;:9421,&quot;registrationNumber&quot;:&quot;14167&quot;,&quot;typeDescription&quot;:&quot;Business Registration Number (AE)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;424490&quot;,&quot;description&quot;:&quot;Other Grocery and Related Products Merchant Wholesalers&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;51490801&quot;,&quot;description&quot;:&quot;Canned goods: fruit, vegetables, seafood, meats, etc.&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;74&quot;,&quot;description&quot;:&quot;Grocery Wholesale&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;5149&quot;,&quot;usSicV4Description&quot;:&quot;Whol groceries&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:11,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:11,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;mailingAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;PO Box 1549&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fujairah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujairah&quot;}},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;561201188&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;PO BOX 1549&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fujairah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujairah&quot;}}},&quot;displaySequence&quot;:8},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:1681336}]}],&quot;dunsControlStatus&quot;:{&quot;subjectHandlingDetails&quot;:[{&quot;description&quot;:&quot;Skeletal Record&quot;,&quot;dnbCode&quot;:9161}],&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:false,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Proprietorship&quot;,&quot;dnbCode&quot;:453},&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;92244377&quot;,&quot;isdCode&quot;:&quot;971&quot;}],&quot;primaryName&quot;:&quot;FUJ IN ELECTROMECHANICAL CONTRACTING&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:9421,&quot;registrationNumber&quot;:&quot;1013917&quot;,&quot;typeDescription&quot;:&quot;Business Registration Number (AE)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;423690&quot;,&quot;description&quot;:&quot;Other Electronic Parts and Equipment Merchant Wholesalers&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;50659903&quot;,&quot;description&quot;:&quot;Security control equipment and systems&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;61&quot;,&quot;description&quot;:&quot;Electronics Wholesale&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;5065&quot;,&quot;usSicV4Description&quot;:&quot;Whol electronic parts/equipment&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:8,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:8,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}],&quot;tradeStyleNames&quot;:[{&quot;name&quot;:&quot;FUJ IN ELECTRO MECHANICAL CONTRACTING COMPANY&quot;,&quot;priority&quot;:1}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;mailingAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;PO Box 9883&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fujairah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujairah&quot;}},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;851139515&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;7/1, Mohammad Bin Matar Road G Floor Al Ittihad&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fujairah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujairah&quot;}}},&quot;displaySequence&quot;:9},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:1495816}]}],&quot;dunsControlStatus&quot;:{&quot;subjectHandlingDetails&quot;:[{&quot;description&quot;:&quot;Skeletal Record&quot;,&quot;dnbCode&quot;:9161}],&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:true,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Corporation&quot;,&quot;dnbCode&quot;:451},&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;24067444&quot;,&quot;isdCode&quot;:&quot;971&quot;}],&quot;primaryName&quot;:&quot;ABU DHABI COMMERCIAL PROPERTIES - FUJ BRANCH&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:9421,&quot;registrationNumber&quot;:&quot;19498&quot;,&quot;typeDescription&quot;:&quot;Business Registration Number (AE)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;813910&quot;,&quot;description&quot;:&quot;Business Associations&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;86110304&quot;,&quot;description&quot;:&quot;Real estate board&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;14&quot;,&quot;description&quot;:&quot;Associations and Organizations&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;8611&quot;,&quot;usSicV4Description&quot;:&quot;Business association&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9093,&quot;value&quot;:10,&quot;reliabilityDescription&quot;:&quot;Estimated&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false,&quot;parent&quot;:{&quot;duns&quot;:&quot;851213474&quot;,&quot;primaryName&quot;:&quot;ABU DHABI COMMERCIAL BANK - DUBAI BRANCH&quot;},&quot;globalUltimateFamilyTreeMembersCount&quot;:171,&quot;familytreeRolesPlayed&quot;:[{&quot;description&quot;:&quot;Subsidiary&quot;,&quot;dnbCode&quot;:9159}],&quot;globalUltimate&quot;:{&quot;duns&quot;:&quot;557565838&quot;,&quot;primaryName&quot;:&quot;ONE HUNDRED AND FOURTEENTH INVESTMENT COMPANY - SOLE PROPRIETORSHIP L.L.C.&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;isoAlpha2Code&quot;:&quot;AE&quot;}}}},&quot;domain&quot;:&quot;adcp.ae&quot;,&quot;isStandalone&quot;:false,&quot;duns&quot;:&quot;851149314&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetName&quot;:&quot;Opposite Abu Dhabi Mall&quot;,&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;Opposite Abu Dhabi Mall 9th Street, Tourist Club Area&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Abu Dhabi&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Abu Dhabi&quot;}}},&quot;displaySequence&quot;:10},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:1424520}]}],&quot;dunsControlStatus&quot;:{&quot;subjectHandlingDetails&quot;:[{&quot;description&quot;:&quot;Skeletal Record&quot;,&quot;dnbCode&quot;:9161}],&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:true,&quot;isMarketable&quot;:false,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;92238650&quot;,&quot;isdCode&quot;:&quot;971&quot;}],&quot;primaryName&quot;:&quot;IOT ANWESHA ENGINEERING &amp; CONSTRUCTION LIMITED - FUJ BR.&quot;,&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;541330&quot;,&quot;description&quot;:&quot;Engineering Services&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:2},{&quot;code&quot;:&quot;541330&quot;,&quot;description&quot;:&quot;Engineering Services&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;87110000&quot;,&quot;description&quot;:&quot;Engineering services&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:2},{&quot;code&quot;:&quot;87110400&quot;,&quot;description&quot;:&quot;Construction and civil engineering&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;13&quot;,&quot;description&quot;:&quot;Architecture and Engineering&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;8711&quot;,&quot;usSicV4Description&quot;:&quot;Engineering services&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9092,&quot;value&quot;:75,&quot;reliabilityDescription&quot;:&quot;Actual&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;mailingAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;PO Box 50227&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fujairah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujairah&quot;}},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;561192658&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetName&quot;:&quot;Near Fujairah Port&quot;,&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;Near Fujairah Port Free Zone Phase- I&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fujairah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujairah&quot;}}},&quot;displaySequence&quot;:11},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:1261825}]}],&quot;dunsControlStatus&quot;:{&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:true,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Co-operative / Mutual Organisation&quot;,&quot;dnbCode&quot;:461},&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;1300857149&quot;,&quot;isdCode&quot;:&quot;61&quot;}],&quot;primaryName&quot;:&quot;The Trustee for THE FUJ TRUST&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:17891,&quot;registrationNumber&quot;:&quot;91239548041&quot;,&quot;typeDescription&quot;:&quot;Business Number (AU)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;561720&quot;,&quot;description&quot;:&quot;Janitorial Services&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;73490000&quot;,&quot;description&quot;:&quot;Building maintenance services, nec&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;21&quot;,&quot;description&quot;:&quot;Building and Dwelling Services&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;7349&quot;,&quot;usSicV4Description&quot;:&quot;Building maintenance services&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:4,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;741486016&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;Australia&quot;,&quot;isoAlpha2Code&quot;:&quot;AU&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;479 UNDERWOOD RD&quot;},&quot;latitude&quot;:-27.594913,&quot;postalCode&quot;:&quot;4123&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;ROCHEDALE SOUTH&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;QUEENSLAND&quot;,&quot;abbreviatedName&quot;:&quot;QLD&quot;},&quot;longitude&quot;:153.116096}},&quot;displaySequence&quot;:12},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:1113870}]}],&quot;dunsControlStatus&quot;:{&quot;subjectHandlingDetails&quot;:[{&quot;description&quot;:&quot;Skeletal Record&quot;,&quot;dnbCode&quot;:9161}],&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:true,&quot;isMarketable&quot;:false,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;42852666&quot;,&quot;isdCode&quot;:&quot;971&quot;}],&quot;primaryName&quot;:&quot;BSI INSPECTORATELTD FUJ&quot;,&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;541380&quot;,&quot;description&quot;:&quot;Testing Laboratories and Services&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;87340000&quot;,&quot;description&quot;:&quot;Testing laboratories&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;13&quot;,&quot;description&quot;:&quot;Architecture and Engineering&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;8734&quot;,&quot;usSicV4Description&quot;:&quot;Testing laboratory&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9093,&quot;value&quot;:75,&quot;reliabilityDescription&quot;:&quot;Estimated&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;mailingAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;PO Box 290&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fujairah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujairah&quot;}},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;558448674&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;4828&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fujairah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujairah&quot;}}},&quot;displaySequence&quot;:13},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:1061000}]}],&quot;dunsControlStatus&quot;:{&quot;subjectHandlingDetails&quot;:[{&quot;description&quot;:&quot;Skeletal Record&quot;,&quot;dnbCode&quot;:9161}],&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:true},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Proprietorship&quot;,&quot;dnbCode&quot;:453},&quot;primaryName&quot;:&quot;Longyan Xinluo District Hongxing Number Graphics Kuaiyin Business Department Fuj ian Garden Store&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:32476,&quot;registrationNumber&quot;:&quot;92350802MA3024HD9B&quot;,&quot;typeDescription&quot;:&quot;United Social Credit Code (CN)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;812990&quot;,&quot;description&quot;:&quot;All Other Personal Services&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;72990000&quot;,&quot;description&quot;:&quot;Miscellaneous personal service&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;108&quot;,&quot;description&quot;:&quot;Miscellaneous Personal Services&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;7299&quot;,&quot;usSicV4Description&quot;:&quot;Misc personal services&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:3,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:3,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;610679513&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;China&quot;,&quot;isoAlpha2Code&quot;:&quot;CN&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;No.34, Building 10, Tiaowei Fujian Garden, Xibei Town, Xinluo District&quot;},&quot;postalCode&quot;:&quot;364000&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Longyan&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujian&quot;}}},&quot;displaySequence&quot;:14},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:1003523}]}],&quot;dunsControlStatus&quot;:{&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:true,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Corporation&quot;,&quot;dnbCode&quot;:451},&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;336233689&quot;,&quot;isdCode&quot;:&quot;81&quot;}],&quot;primaryName&quot;:&quot;FUJ SEIMEN SUMIDA, Y.K.&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:1392,&quot;registrationNumber&quot;:&quot;297689878&quot;,&quot;typeDescription&quot;:&quot;Tokyo Shoko Research Business Identifier (JP)&quot;},{&quot;typeDnBCode&quot;:32475,&quot;registrationNumber&quot;:&quot;1010602013422&quot;,&quot;typeDescription&quot;:&quot;Corporate Number (JP)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;311999&quot;,&quot;description&quot;:&quot;All Other Miscellaneous Food Manufacturing&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;20990800&quot;,&quot;description&quot;:&quot;Pasta, rice, and potato, packaged combination products&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;67&quot;,&quot;description&quot;:&quot;Food Manufacturing&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;2099&quot;,&quot;usSicV4Description&quot;:&quot;Mfg food preparations&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:6,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:6,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}],&quot;registeredAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;Japan&quot;,&quot;isoAlpha2Code&quot;:&quot;JP&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;2-17-9, HONJO&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;SUMIDA-KU&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;TOKYO&quot;,&quot;abbreviatedName&quot;:&quot;TKY&quot;}},&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;716613492&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;Japan&quot;,&quot;isoAlpha2Code&quot;:&quot;JP&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;2-17-9, HONJO&quot;},&quot;latitude&quot;:35.707965,&quot;postalCode&quot;:&quot;130-0004&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;SUMIDA-KU&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;TOKYO&quot;,&quot;abbreviatedName&quot;:&quot;TKY&quot;},&quot;longitude&quot;:139.797563}},&quot;displaySequence&quot;:15},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:933744}]}],&quot;dunsControlStatus&quot;:{&quot;subjectHandlingDetails&quot;:[{&quot;description&quot;:&quot;Skeletal Record&quot;,&quot;dnbCode&quot;:9161}],&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:true,&quot;isMarketable&quot;:false,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;92224977&quot;,&quot;isdCode&quot;:&quot;971&quot;}],&quot;primaryName&quot;:&quot;FUJ BEVERAGE DIST. CENTRE&quot;,&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;445298&quot;,&quot;description&quot;:&quot;All Other Specialty Food Retailers&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;54990200&quot;,&quot;description&quot;:&quot;Beverage stores&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;73&quot;,&quot;description&quot;:&quot;Grocery Stores&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;5499&quot;,&quot;usSicV4Description&quot;:&quot;Ret misc foods&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9092,&quot;value&quot;:30,&quot;reliabilityDescription&quot;:&quot;Actual&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;mailingAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;PO Box 544&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fujairah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujairah&quot;}},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;561196037&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;Al kumasi transport&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Fujairah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujairah&quot;}}},&quot;displaySequence&quot;:16},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:777648}]}],&quot;dunsControlStatus&quot;:{&quot;subjectHandlingDetails&quot;:[{&quot;description&quot;:&quot;Skeletal Record&quot;,&quot;dnbCode&quot;:9161}],&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:true,&quot;isMarketable&quot;:false,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Proprietorship&quot;,&quot;dnbCode&quot;:453},&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;65422647&quot;,&quot;isdCode&quot;:&quot;971&quot;}],&quot;primaryName&quot;:&quot;Deba Al Fuj. Auto Paints &amp; Hardware Trading&quot;,&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;423710&quot;,&quot;description&quot;:&quot;Hardware Merchant Wholesalers&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;50720000&quot;,&quot;description&quot;:&quot;Hardware&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;44&quot;,&quot;description&quot;:&quot;Construction and Hardware Materials Wholesale&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;5072&quot;,&quot;usSicV4Description&quot;:&quot;Whol hardware&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9092,&quot;value&quot;:4,&quot;reliabilityDescription&quot;:&quot;Actual&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;mailingAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;PO Box 34457&quot;},&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Sharjah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Sharjah&quot;}},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;851186769&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Arab Emirates&quot;,&quot;isoAlpha2Code&quot;:&quot;AE&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;Industrial Area 3&quot;},&quot;latitude&quot;:25.321369,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Sharjah&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Sharjah&quot;},&quot;longitude&quot;:55.429855}},&quot;displaySequence&quot;:17},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:589829}]}],&quot;dunsControlStatus&quot;:{&quot;subjectHandlingDetails&quot;:[{&quot;description&quot;:&quot;Skeletal Record&quot;,&quot;dnbCode&quot;:9161}],&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:true,&quot;isMarketable&quot;:false,&quot;isTelephoneDisconnected&quot;:false},&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;543350287&quot;,&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;5925165408&quot;,&quot;isdCode&quot;:&quot;86&quot;}],&quot;primaryName&quot;:&quot;Guofu Haohua Certified Public Accountants'Firm (Special General Parternship) Fuj ian Branch&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;China&quot;,&quot;isoAlpha2Code&quot;:&quot;CN&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;Lianqian West Rd.&quot;},&quot;postalCode&quot;:&quot;361010&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Xiamen&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujian&quot;}},&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;541219&quot;,&quot;description&quot;:&quot;Other Accounting Services&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;87210000&quot;,&quot;description&quot;:&quot;Accounting, auditing, and bookkeeping&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;1&quot;,&quot;description&quot;:&quot;Accounting and Tax Preparation&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;8721&quot;,&quot;usSicV4Description&quot;:&quot;Accounting/auditing/bookkeeping&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9092,&quot;value&quot;:51,&quot;reliabilityDescription&quot;:&quot;Actual&quot;}]},&quot;displaySequence&quot;:18},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:561695}]}],&quot;dunsControlStatus&quot;:{&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:true,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Corporation&quot;,&quot;dnbCode&quot;:451},&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;73857735&quot;,&quot;isdCode&quot;:&quot;886&quot;}],&quot;primaryName&quot;:&quot;FUJ CO., LTD.&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:1390,&quot;registrationNumber&quot;:&quot;16874893&quot;,&quot;typeDescription&quot;:&quot;Business Registration Number (TW)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;237130&quot;,&quot;description&quot;:&quot;Power and Communication Line and Related Structures Construction&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:2},{&quot;code&quot;:&quot;238220&quot;,&quot;description&quot;:&quot;Plumbing, Heating, and Air-Conditioning Contractors&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;16239901&quot;,&quot;description&quot;:&quot;Electric power line construction&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:2},{&quot;code&quot;:&quot;17110000&quot;,&quot;description&quot;:&quot;Plumbing, heating, air-conditioning&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;176&quot;,&quot;description&quot;:&quot;Specialty Construction Trade Contractors&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;1711&quot;,&quot;usSicV4Description&quot;:&quot;Plumbing/heating/air cond contractor&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9068,&quot;informationScopeDescription&quot;:&quot;Headquarters Only (Employs Here)&quot;,&quot;reliabilityDnBCode&quot;:9092,&quot;value&quot;:5,&quot;reliabilityDescription&quot;:&quot;Actual&quot;},{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9092,&quot;value&quot;:5,&quot;reliabilityDescription&quot;:&quot;Actual&quot;}],&quot;registeredAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;Taiwan&quot;,&quot;isoAlpha2Code&quot;:&quot;TW&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;5F, No. 273, Xiahai Rd., Renwu Dist., Kaohsiung City&quot;},&quot;postalCode&quot;:&quot;81457&quot;},&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;domain&quot;:&quot;fuj.com.tw&quot;,&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;658804799&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;Taiwan&quot;,&quot;isoAlpha2Code&quot;:&quot;TW&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;8F, 223, Chien Gung Rd.,&quot;},&quot;latitude&quot;:22.646725,&quot;postalCode&quot;:&quot;80780&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Kaohsiung City&quot;},&quot;longitude&quot;:120.347094}},&quot;displaySequence&quot;:19},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:495299}]}],&quot;dunsControlStatus&quot;:{&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:true,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Corporation&quot;,&quot;dnbCode&quot;:451},&quot;isPubliclyTradedCompany&quot;:false,&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;5642600817&quot;,&quot;isdCode&quot;:&quot;49&quot;}],&quot;primaryName&quot;:&quot;FUJ Investitionsgüter GmbH &amp; Co. KG&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:6862,&quot;registrationNumber&quot;:&quot;34497A1076&quot;,&quot;typeDescription&quot;:&quot;Register Number (DE)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;523940&quot;,&quot;description&quot;:&quot;Portfolio Management and Investment Advice&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;67330102&quot;,&quot;description&quot;:&quot;Personal investment trust management&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;136&quot;,&quot;description&quot;:&quot;Pensions and Funds&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;6733&quot;,&quot;usSicV4Description&quot;:&quot;Trust management&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9092,&quot;value&quot;:1,&quot;reliabilityDescription&quot;:&quot;Actual&quot;}],&quot;registeredAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;Germany&quot;,&quot;isoAlpha2Code&quot;:&quot;DE&quot;},&quot;streetName&quot;:&quot;Hellenberg&quot;,&quot;streetNumber&quot;:&quot;20&quot;,&quot;postalCode&quot;:&quot;34474&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Diemelstadt&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Hessen&quot;}},&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;domain&quot;:&quot;jaekel.eu&quot;,&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;328721493&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;Germany&quot;,&quot;isoAlpha2Code&quot;:&quot;DE&quot;},&quot;streetName&quot;:&quot;Hellenberg&quot;,&quot;streetNumber&quot;:&quot;20&quot;,&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;Hellenberg 20&quot;},&quot;latitude&quot;:51.488439,&quot;postalCode&quot;:&quot;34474&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Diemelstadt&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Hessen&quot;,&quot;abbreviatedName&quot;:&quot;HE&quot;},&quot;longitude&quot;:9.00424}},&quot;displaySequence&quot;:20},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:394074}]}],&quot;dunsControlStatus&quot;:{&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:true,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Corporation&quot;,&quot;dnbCode&quot;:451},&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;7149843919&quot;,&quot;isdCode&quot;:&quot;1&quot;}],&quot;primaryName&quot;:&quot;Fuj Enterprises LLC&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:12444,&quot;registrationNumber&quot;:&quot;E17485192021-9&quot;,&quot;typeDescription&quot;:&quot;Business Registration Number (US)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;458110&quot;,&quot;description&quot;:&quot;Clothing and Clothing Accessories Retailers&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:2},{&quot;code&quot;:&quot;459999&quot;,&quot;description&quot;:&quot;All Other Miscellaneous Retailers&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;56410000&quot;,&quot;description&quot;:&quot;Children's and infants' wear stores&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:2},{&quot;code&quot;:&quot;59619925&quot;,&quot;description&quot;:&quot;Electronic shopping&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;130&quot;,&quot;description&quot;:&quot;Non-store Retail&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;5961&quot;,&quot;usSicV4Description&quot;:&quot;Ret mail-order house&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9068,&quot;informationScopeDescription&quot;:&quot;Headquarters Only (Employs Here)&quot;,&quot;reliabilityDnBCode&quot;:9092,&quot;value&quot;:10,&quot;reliabilityDescription&quot;:&quot;Actual&quot;},{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9092,&quot;value&quot;:10,&quot;reliabilityDescription&quot;:&quot;Actual&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;118313106&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United States&quot;,&quot;isoAlpha2Code&quot;:&quot;US&quot;},&quot;addressCounty&quot;:{&quot;name&quot;:&quot;Clark&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;7679 Morning Lake Dr&quot;},&quot;latitude&quot;:36.300676,&quot;postalCode&quot;:&quot;89131-3676&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Las Vegas&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Nevada&quot;,&quot;abbreviatedName&quot;:&quot;NV&quot;},&quot;longitude&quot;:-115.21243}},&quot;displaySequence&quot;:21},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:386295}]}],&quot;dunsControlStatus&quot;:{&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Corporation&quot;,&quot;dnbCode&quot;:451},&quot;isPubliclyTradedCompany&quot;:false,&quot;primaryName&quot;:&quot;FUJ PROPERTIES LIMITED&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:2541,&quot;registrationNumber&quot;:&quot;SC791322&quot;,&quot;typeDescription&quot;:&quot;COMPANIES REGISTRY OFFICE Number (GB)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;531190&quot;,&quot;description&quot;:&quot;Lessors of Other Real Estate Property&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:2},{&quot;code&quot;:&quot;237210&quot;,&quot;description&quot;:&quot;Land Subdivision&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;68100&quot;,&quot;description&quot;:&quot;Buying and selling of own real estate&quot;,&quot;typeDescription&quot;:&quot;UK Standard Industry Code 2007&quot;,&quot;typeDnbCode&quot;:19295,&quot;priority&quot;:1},{&quot;code&quot;:&quot;65190000&quot;,&quot;description&quot;:&quot;Real property lessors, nec&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:2},{&quot;code&quot;:&quot;65520000&quot;,&quot;description&quot;:&quot;Subdividers and developers, nec&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;27&quot;,&quot;description&quot;:&quot;Civil Engineering&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;6552&quot;,&quot;usSicV4Description&quot;:&quot;Subdivider/developer&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:5,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:5,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}],&quot;registeredAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Kingdom&quot;,&quot;isoAlpha2Code&quot;:&quot;GB&quot;},&quot;streetName&quot;:&quot;6, ANGUS GARDENS, MONIFIETH&quot;,&quot;postalCode&quot;:&quot;DD5 4UE&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;DUNDEE&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;SCOTLAND&quot;}},&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;231257475&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United Kingdom&quot;,&quot;isoAlpha2Code&quot;:&quot;GB&quot;},&quot;addressCounty&quot;:{&quot;name&quot;:&quot;Angus&quot;},&quot;streetAddress&quot;:{&quot;line2&quot;:&quot;Monifieth&quot;,&quot;line1&quot;:&quot;6 Angus Gardens&quot;},&quot;postalCode&quot;:&quot;DD5 4UE&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;DUNDEE&quot;}}},&quot;displaySequence&quot;:22},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:378000}]}],&quot;dunsControlStatus&quot;:{&quot;subjectHandlingDetails&quot;:[{&quot;description&quot;:&quot;Skeletal Record&quot;,&quot;dnbCode&quot;:9161}],&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:true,&quot;isMarketable&quot;:false,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;5945991619&quot;,&quot;isdCode&quot;:&quot;86&quot;}],&quot;primaryName&quot;:&quot;Dongwucha Villager's Committee of Shanting Township, Xiuyu District, Putian, Fuj ian&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:22957,&quot;registrationNumber&quot;:&quot;764098140&quot;,&quot;typeDescription&quot;:&quot;National Organization Code (CN)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;813410&quot;,&quot;description&quot;:&quot;Civic and Social Organizations&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;86410000&quot;,&quot;description&quot;:&quot;Civic and social associations&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;14&quot;,&quot;description&quot;:&quot;Associations and Organizations&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;8641&quot;,&quot;usSicV4Description&quot;:&quot;Civic/social association&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9092,&quot;value&quot;:10,&quot;reliabilityDescription&quot;:&quot;Actual&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;546536968&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;China&quot;,&quot;isoAlpha2Code&quot;:&quot;CN&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;Dongwucha, Shanting Township, Xiuyu District&quot;},&quot;postalCode&quot;:&quot;351152&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Putian&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Fujian&quot;}}},&quot;displaySequence&quot;:23},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:319000}]}],&quot;dunsControlStatus&quot;:{&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:true,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Corporation&quot;,&quot;dnbCode&quot;:451},&quot;isPubliclyTradedCompany&quot;:false,&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;564260080&quot;,&quot;isdCode&quot;:&quot;49&quot;}],&quot;primaryName&quot;:&quot;FUJ Verwaltungs-GmbH&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:6862,&quot;registrationNumber&quot;:&quot;34497B1884&quot;,&quot;typeDescription&quot;:&quot;Register Number (DE)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;561110&quot;,&quot;description&quot;:&quot;Office Administrative Services&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;87410100&quot;,&quot;description&quot;:&quot;Business management&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;3&quot;,&quot;description&quot;:&quot;Administrative Services&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;8741&quot;,&quot;usSicV4Description&quot;:&quot;Management services&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:3,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:3,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}],&quot;registeredAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;Germany&quot;,&quot;isoAlpha2Code&quot;:&quot;DE&quot;},&quot;streetName&quot;:&quot;Hellenberg&quot;,&quot;streetNumber&quot;:&quot;20&quot;,&quot;postalCode&quot;:&quot;34474&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Diemelstadt&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Hessen&quot;}},&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;342791806&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;Germany&quot;,&quot;isoAlpha2Code&quot;:&quot;DE&quot;},&quot;streetName&quot;:&quot;Hellenberg&quot;,&quot;streetNumber&quot;:&quot;20&quot;,&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;Hellenberg 20&quot;},&quot;latitude&quot;:51.488439,&quot;postalCode&quot;:&quot;34474&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Diemelstadt&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Hessen&quot;,&quot;abbreviatedName&quot;:&quot;HE&quot;},&quot;longitude&quot;:9.00424}},&quot;displaySequence&quot;:24},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:230370}]}],&quot;dunsControlStatus&quot;:{&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:false,&quot;isTelephoneDisconnected&quot;:false},&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;007323295&quot;,&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;9512752886&quot;,&quot;isdCode&quot;:&quot;1&quot;}],&quot;primaryName&quot;:&quot;MADDIE AND MAC CO DBA FUJ&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United States&quot;,&quot;isoAlpha2Code&quot;:&quot;US&quot;},&quot;addressCounty&quot;:{&quot;name&quot;:&quot;King&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;1030 Elliott Ave W&quot;},&quot;latitude&quot;:47.628302,&quot;postalCode&quot;:&quot;98119-3610&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Seattle&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Washington&quot;,&quot;abbreviatedName&quot;:&quot;WA&quot;},&quot;longitude&quot;:-122.370249},&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;999990&quot;,&quot;description&quot;:&quot;Unclassified Establishments&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;99992222&quot;,&quot;description&quot;:&quot;Duns Support Record, nonclassifiable establishment&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;195&quot;,&quot;description&quot;:&quot;Nonclassifiable Establishments&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;9999&quot;,&quot;usSicV4Description&quot;:&quot;Nonclassified establishment&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:7,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:7,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}]},&quot;displaySequence&quot;:25},{&quot;organization&quot;:{&quot;financials&quot;:[{&quot;yearlyRevenue&quot;:[{&quot;currency&quot;:&quot;USD&quot;,&quot;value&quot;:222976}]}],&quot;dunsControlStatus&quot;:{&quot;isDelisted&quot;:false,&quot;isOutOfBusiness&quot;:false,&quot;isMailUndeliverable&quot;:false,&quot;isMarketable&quot;:true,&quot;isTelephoneDisconnected&quot;:false},&quot;isFortune1000Listed&quot;:false,&quot;businessEntityType&quot;:{&quot;description&quot;:&quot;Corporation&quot;,&quot;dnbCode&quot;:451},&quot;telephone&quot;:[{&quot;telephoneNumber&quot;:&quot;2068199168&quot;,&quot;isdCode&quot;:&quot;1&quot;}],&quot;primaryName&quot;:&quot;SLAGER FUJ CREATIVE MEDIA LLC&quot;,&quot;registrationNumbers&quot;:[{&quot;typeDnBCode&quot;:12444,&quot;registrationNumber&quot;:&quot;603621681&quot;,&quot;typeDescription&quot;:&quot;Business Registration Number (US)&quot;}],&quot;industryCodes&quot;:[{&quot;code&quot;:&quot;517810&quot;,&quot;description&quot;:&quot;All Other Telecommunications&quot;,&quot;typeDescription&quot;:&quot;North American Industry Classification System 2022&quot;,&quot;typeDnbCode&quot;:37788,&quot;priority&quot;:1},{&quot;code&quot;:&quot;48990000&quot;,&quot;description&quot;:&quot;Communication services, nec&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Standard Industry Code&quot;,&quot;typeDnbCode&quot;:3599,&quot;priority&quot;:1},{&quot;code&quot;:&quot;193&quot;,&quot;description&quot;:&quot;Wireless Telecommunications Carriers&quot;,&quot;typeDescription&quot;:&quot;D&amp;B Hoovers Industry Classification&quot;,&quot;typeDnbCode&quot;:35912,&quot;priority&quot;:1}],&quot;primaryIndustryCodes&quot;:[{&quot;usSicV4&quot;:&quot;4899&quot;,&quot;usSicV4Description&quot;:&quot;Communication services&quot;}],&quot;numberOfEmployees&quot;:[{&quot;informationScopeDnBCode&quot;:9067,&quot;informationScopeDescription&quot;:&quot;Consolidated&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:6,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;},{&quot;informationScopeDnBCode&quot;:9066,&quot;informationScopeDescription&quot;:&quot;Individual&quot;,&quot;reliabilityDnBCode&quot;:9094,&quot;value&quot;:6,&quot;reliabilityDescription&quot;:&quot;Modelled&quot;}],&quot;corporateLinkage&quot;:{&quot;isBranch&quot;:false},&quot;domain&quot;:&quot;slagerfujcreativemedia.com&quot;,&quot;isStandalone&quot;:true,&quot;duns&quot;:&quot;061057863&quot;,&quot;primaryAddress&quot;:{&quot;addressCountry&quot;:{&quot;name&quot;:&quot;United States&quot;,&quot;isoAlpha2Code&quot;:&quot;US&quot;},&quot;addressCounty&quot;:{&quot;name&quot;:&quot;King&quot;},&quot;streetAddress&quot;:{&quot;line1&quot;:&quot;600 NW 3RD Ct&quot;},&quot;latitude&quot;:47.488038,&quot;postalCode&quot;:&quot;98057-3400&quot;,&quot;addressLocality&quot;:{&quot;name&quot;:&quot;Renton&quot;},&quot;addressRegion&quot;:{&quot;name&quot;:&quot;Washington&quot;,&quot;abbreviatedName&quot;:&quot;WA&quot;},&quot;longitude&quot;:-122.225832}},&quot;displaySequence&quot;:26}],&quot;inquiryDetail&quot;:{&quot;pageNumber&quot;:1,&quot;pageSize&quot;:26,&quot;primaryName&quot;:&quot;Fuj&quot;},&quot;candidatesMatchedQuantity&quot;:113,&quot;transactionDetail&quot;:{&quot;serviceVersion&quot;:&quot;1&quot;,&quot;inLanguage&quot;:&quot;en-US&quot;,&quot;transactionID&quot;:&quot;rrt-09a7baa2a1b6b8283-c-eu-13437-28958423-1&quot;,&quot;transactionTimestamp&quot;:&quot;2023-12-23T05:45:34.968Z&quot;},&quot;candidatesReturnedQuantity&quot;:26}}"
                             baseType="JSON"
                             description=""
                             name="json"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getSuggestedDUNSNumber">
                        <ResultType
                         baseType="JSON"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="text"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getSuggestedLegalName">
                        <ResultType
                         baseType="JSON"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="text"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getSupplyObjectDetails">
                        <ResultType
                         aspect.dataShape="IK.SupplyObject.DataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="number"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getSupplyObjects">
                        <ResultType
                         aspect.dataShape="IK.SupplyObject.DataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="project_name"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getSupplyObjectStatus">
                        <ResultType
                         aspect.dataShape="GenericStringList"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getTradeGoodTypes">
                        <ResultType
                         aspect.dataShape="IK.KeyValuePair.DataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getTypeOfOperations">
                        <ResultType
                         aspect.dataShape="IK.KeyValuePair.DataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="INTEGER"
                             description=""
                             name="supply_chain_actor_type_id"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="INTEGER"
                             description=""
                             name="trade_good_type_id"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="getTypeOfOperationsForTransport">
                        <ResultType
                         aspect.dataShape="GenericStringList"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="isFieldsEdited">
                        <ResultType
                         baseType="BOOLEAN"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="actor_type"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="duns_number"
                             ordinal="7"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="legal_name"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="production_unit"
                             ordinal="8"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="supply_object_name"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="supply_object_type"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="trade_good_id"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="type_of_operation"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             aspect.dataShape="GenericStringList"
                             baseType="INFOTABLE"
                             description=""
                             name="type_of_operations"
                             ordinal="9"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="validateEditSupplyObject">
                        <ResultType
                         baseType="BOOLEAN"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="actor_type"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="duns_number"
                             ordinal="7"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="legal_name"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="name"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="production_unit"
                             ordinal="16"></FieldDefinition>
                            <FieldDefinition
                             aspect.dataShape="IK.SupplyObject.DataShape"
                             baseType="INFOTABLE"
                             description=""
                             name="supplyObject"
                             ordinal="18"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="trade_good_id"
                             ordinal="17"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="type"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="type_of_operation"
                             ordinal="5"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="addSubSupplierToDatabase">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + "addSubSupplierToDatabase -> ";
                                        
                                        try {
                                        	// result: INFOTABLE dataShape: ""
                                            let dbConnector = Things["IK.CVM.Configuration"].getCVMDatabase();
                                        	result = Things[dbConnector].addSubSupplier({
                                                duns_number:duns_number /* STRING */,
                                        		country: country /* STRING */ ,
                                        		address: address /* STRING */ ,
                                        		legal_code: legal_code /* STRING */ ,
                                        		supplier_id: supplier_id /* INTEGER */ ,
                                        		gln_code: gln_code /* STRING */ ,
                                        		legal_name: legal_name /* STRING */ ,
                                        		latitude:latitude /* STRING */ ,
                                                longitude:longitude /* STRING */,
                                        	});
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="archiveSupplyObject">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " archiveSupplyObject -> ";
                                        
                                        try {
                                        	let odataconnectorthing = Things["IK.CVM.Configuration"].getOdataConnector();
                                        	let checkoutJson = Things[odataconnectorthing].checkoutPart({
                                        		ID: supply_object_oid
                                        	});
                                        	let checkoutId = checkoutJson.ID;
                                        	var json = {
                                        		"@odata.type": "#PTC.ProdMgmt.CVMObject",
                                        		"CVMClassification": {
                                        			"ClfNodeInternalName": "GDSupplyObject",
                                        			"ClassificationAttributes": [{
                                        				"InternalName": "com.ikea.GDStatus",
                                        				"Value": "Archived"
                                        			}]
                                        		}
                                        	};
                                        	let updateJson = Things[odataconnectorthing].updatePart({
                                        		ID: checkoutId,
                                        		Part: json
                                        	});
                                        	let checkInResult = Things[odataconnectorthing].checkInPart({
                                        		ID: checkoutId
                                        	});
                                        	if (checkInResult) {
                                        		result = true;
                                        	}
                                        	logger.info(FN + " Supply object [" + checkInResult.Number + "] archived successfully.");
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="createSupplyObject">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " createSupplyObject -> ";
                                        
                                        try {
                                        	var libraryID = Things["IK.CVM.Configuration"].getSupplyPartsLibraryID();
                                        	var swaggerConnector = Things["IK.CVM.Configuration"].getWNCSwaggerConnector();
                                        	var odataconnectorthing = Things["IK.CVM.Configuration"].getOdataConnector();
                                        	let dbConnector = Things["IK.CVM.Configuration"].getCVMDatabase();
                                            let subSupplierInDB = Things["IK.DatabaseConnector.Thing"].getSubSupplierInfo({
                                        		supplier_id: supplier_id /* NUMBER */
                                        	});
                                            let db_supplier_id = subSupplierInDB.supplier_id;
                                        //    logger.info(FN + "supply object number [" + db_supplier_id + "] is created successfully.");
                                        	
                                        
                                        	var folderjson = Things[swaggerConnector].Get_Folders({
                                        		id: libraryID
                                        	});
                                        
                                        	var folderId;
                                        	if (folderjson !== undefined && folderjson.items !== undefined) {
                                        		var items = folderjson.items;
                                        		for (var i = 0; i < items.length; i++) {
                                        			var item = items[i];
                                        			if (item.attributes.name == project_name) {
                                        				folderId = item.id;
                                        			}
                                        		}
                                        	}
                                        	var subfolderjson = Things[swaggerConnector].Get_SubFolders({
                                        		id: folderId
                                        	});
                                        	var subfolderId;
                                        	if (subfolderjson !== undefined && subfolderjson.items !== undefined) {
                                        		var subfolderitems = subfolderjson.items;
                                        		for (var j = 0; j < subfolderitems.length; j++) {
                                        			var subfolderitem = subfolderitems[j];
                                        			if (subfolderitem.attributes.name == "Supply Objects") {
                                        				subfolderId = subfolderitem.id;
                                        			}
                                        		}
                                        	}
                                        
                                        	var json = {
                                        		"@odata.type": "#PTC.ProdMgmt.CVMObject",
                                        		"Folder@odata.bind": "Folders('" + subfolderId + "')",
                                        		"Context@odata.bind": "Containers('" + libraryID + "')",
                                        		"Name": name,
                                        		"CVMClassification": {
                                        			"ClfNodeInternalName": "GDSupplyObject",
                                        			"ClassificationAttributes": [{
                                        					"InternalName": "com.ikea.GDObjectClass",
                                        					"Value": object_type ? object_type : " "
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDType",
                                        					"Value": type ? type : "NA"
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDName",
                                        					"Value": name
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDTradeGoodID",
                                        					"Value": trade_good_id ? trade_good_id : " "
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDActorType",
                                        					"Value": actor_type ? actor_type : " "
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDTypeOfOperation",
                                        					"Value": type_of_operation ? type_of_operation : " "
                                        				},
                                        				
                                        				{
                                        					"InternalName": "com.ikea.GDSupplyChainActorID",
                                        					"Value": supplier_id ? supplier_id+"": " "
                                        				},
                                        				
                                        				{
                                        					"InternalName": "com.ikea.GDProductionUnit",
                                        					"Value": production_unit ? production_unit : " "
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDStatus",
                                        					"Value": "Active"
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDSupplierDetails",
                                        					"Value": project_number
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDBUType",
                                        					"Value": bu_type
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDBUCodeOwner",
                                        					"Value": bu_code_owner
                                        				}
                                        			]
                                        		}
                                        	};
                                        
                                        	var createdJson = Things[odataconnectorthing].createPart({
                                        		Part: json
                                        	});
                                        
                                        	let sub_supplier_id = parseInt(duns_number);
                                        	
                                        
                                        	if (!(subSupplierInDB && subSupplierInDB.getRowCount() != 0)) {
                                        		me.addSubSupplierToDatabase({
                                                    duns_number:duns_number /* STRING */ ,
                                        			country: country /* STRING */ ,
                                        			legal_code: legal_code /* STRING */ ,
                                        			address: address /* STRING */ ,
                                        			supplier_id: supplier_id /* INTEGER */ ,
                                        			gln_code: gln_code /* STRING */ ,
                                        			legal_name: legal_name /* STRING */ ,
                                        //			gps_coordinates: (latitude && longtitude) ? latitude.slice(0, -1) + "," + longtitude.slice(0, -1): "", /* STRING */
                                        		    latitude:latitude,
                                                    longitude:longitude
                                                });
                                        	}
                                        
                                        	if (createdJson) {
                                        		result = true;
                                        		logger.info(FN + "Trade good supply object [" + createdJson.Number + "] is created successfully.");
                                        	}
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="createTransportSupplyObject">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " createTransportSupplyObject -> ";
                                        
                                        try {
                                        	let typeofoperations = " ";
                                        	let typeofoperation = " ";
                                        	for (let count = 0; count < type_of_operation.getRowCount(); count++) {
                                        		typeofoperations = typeofoperations + ", " + type_of_operation.rows[count].item;
                                        		typeofoperation = typeofoperation + " " + type_of_operation.rows[count].item;
                                        	}
                                        	typeofoperations = typeofoperations.slice(2);
                                        
                                        
                                        	let libraryID = Things["IK.CVM.Configuration"].getSupplyPartsLibraryID();
                                        	let swaggerConnector = Things["IK.CVM.Configuration"].getWNCSwaggerConnector();
                                        	let odataconnectorthing = Things["IK.CVM.Configuration"].getOdataConnector();
                                            let subSupplierInDB = Things["IK.DatabaseConnector.Thing"].getSubSupplierInfo({
                                        		supplier_id: supplier_id /* NUMBER */
                                        	});
                                            let db_supplier_id = subSupplierInDB.supplier_id;
                                        
                                        	let folderjson = Things[swaggerConnector].Get_Folders({
                                        		id: libraryID
                                        	});
                                        
                                        	let folderId;
                                        	if (folderjson !== undefined && folderjson.items !== undefined) {
                                        		let items = folderjson.items;
                                        		for (let i = 0; i < items.length; i++) {
                                        			let item = items[i];
                                        			if (item.attributes.name == project_name) {
                                        				folderId = item.id;
                                        			}
                                        		}
                                        	}
                                        	let subfolderjson = Things[swaggerConnector].Get_SubFolders({
                                        		id: folderId
                                        	});
                                        	let subfolderId;
                                        	if (subfolderjson !== undefined && subfolderjson.items !== undefined) {
                                        		let subfolderitems = subfolderjson.items;
                                        		for (let j = 0; j < subfolderitems.length; j++) {
                                        			let subfolderitem = subfolderitems[j];
                                        			if (subfolderitem.attributes.name == "Supply Objects") {
                                        				subfolderId = subfolderitem.id;
                                        			}
                                        		}
                                        	}
                                        
                                        	let json = {
                                        		"@odata.type": "#PTC.ProdMgmt.CVMObject",
                                        		"Folder@odata.bind": "Folders('" + subfolderId + "')",
                                        		"Context@odata.bind": "Containers('" + libraryID + "')",
                                        		"Name": actor_type + typeofoperation,
                                        		"CVMClassification": {
                                        			"ClfNodeInternalName": "GDSupplyObject",
                                        			"ClassificationAttributes": [{
                                        					"InternalName": "com.ikea.GDObjectClass",
                                        					"Value": object_type ? object_type : "undefined"
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDType",
                                        					"Value": type ? type : "NA"
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDName",
                                        					"Value": name ? name : "NA"
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDTradeGoodID",
                                        					"Value": trade_good_id ? trade_good_id : " "
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDActorType",
                                        					"Value": actor_type ? actor_type : " "
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDTypeOfOperation",
                                        					"Value": typeofoperations ? typeofoperations : " "
                                        				},
                                        				
                                        				{
                                        					"InternalName": "com.ikea.GDSupplyChainActorID",
                                        					"Value": supplier_id ? supplier_id+"" : " "
                                        				},
                                        				
                                        				{
                                        					"InternalName": "com.ikea.GDProductionUnit",
                                        					"Value": production_unit ? production_unit : " "
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDStatus",
                                        					"Value": "Active"
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDSupplierDetails",
                                        					"Value": project_number
                                        				},
                                                        {
                                        					"InternalName": "com.ikea.GDBUType",
                                        					"Value": bu_type
                                        				},
                                                        {
                                        					"InternalName": "com.ikea.GDBUCodeOwner",
                                        					"Value": bu_code_owner
                                        				}
                                        			]
                                        		}
                                        	};
                                        	let createdJson = Things[odataconnectorthing].createPart({
                                        		Part: json
                                        	});
                                        
                                            if (!(subSupplierInDB && subSupplierInDB.getRowCount() != 0)) {
                                        		me.addSubSupplierToDatabase({
                                                    duns_number:duns_number /* STRING */ ,
                                        			country: country /* STRING */ ,
                                        			legal_code: legal_code /* STRING */ ,
                                        			address: address /* STRING */ ,
                                        			supplier_id: supplier_id /* INTEGER */ ,
                                        			gln_code: gln_code /* STRING */ ,
                                        			legal_name: legal_name /* STRING */ ,
                                        //			gps_coordinates: (latitude && longtitude) ? latitude.slice(0, -1) + "," + longtitude.slice(0, -1): "", /* STRING */
                                        		    latitude:latitude,
                                                    longitude:longitude
                                                });
                                        	}
                                        	if (createdJson) {
                                        		result = true;
                                        		logger.info(FN + " Transport supply object [" + createdJson.Number + "] is created successfully.");
                                        	}
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="editSupplyObject">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " editSupplyObject -> ";
                                        
                                        try {
                                        	var odataconnectorthing = Things["IK.CVM.Configuration"].getOdataConnector();
                                        	let supplyObj = supplyObject.rows[0];
                                        	result = false;
                                        	let checkoutJson = Things[odataconnectorthing].checkoutPart({
                                        		ID: supply_object_oid
                                        	});
                                        	let checkoutId = checkoutJson.ID;
                                        
                                        	var json = {
                                        		"@odata.type": "#PTC.ProdMgmt.CVMObject",
                                        		"CVMClassification": {
                                        			"ClfNodeInternalName": "GDSupplyObject",
                                        			"ClassificationAttributes": [{
                                        					"InternalName": "com.ikea.GDObjectClass",
                                        					"Value": object_type
                                        				}, {
                                        					"InternalName": "com.ikea.GDType",
                                        					"Value": type
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDName",
                                        					"Value": name
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDTradeGoodID",
                                        					"Value": trade_good_id
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDActorType",
                                        					"Value": actor_type
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDTypeOfOperation",
                                        					"Value": type_of_operation
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDLegalName",
                                        					"Value": legal_name
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDDUNSNumber",
                                        					"Value": duns_number
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDAddress",
                                        					"Value": address
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDCountry",
                                        					"Value": country
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDLatitude",
                                        					"Value": latitude
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDLongtitude",
                                        					"Value": longtitude
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDGLNCode",
                                        					"Value": gln_code
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDLegalCode",
                                        					"Value": legal_code
                                        				},
                                        				{
                                        					"InternalName": "com.ikea.GDProductionUnit",
                                        					"Value": production_unit ? production_unit : " "
                                        				}
                                        			]
                                        		}
                                        	};
                                        	var updateJson = Things[odataconnectorthing].updatePart({
                                        		Part: json,
                                        		ID: checkoutId,
                                        	});
                                        	let checkInResult = Things[odataconnectorthing].checkInPart({
                                        		ID: checkoutId
                                        	});
                                        	if (name != supplyObj.name) {
                                        		let updateNameJson = Things[odataconnectorthing].updateCommonProperties({
                                        			ID: checkInResult.ID,
                                        			Updates: {
                                        				"Updates": {
                                        					"Name": name
                                        				}
                                        			}
                                        		});
                                        	}
                                        	if (checkInResult) {
                                        		result = true;
                                        	}
                                        	logger.info(FN + "Supply object [" + supplyObject.rows[0].supply_object_id + "] is edited successfully.");
                                        
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="filterSupplyObjects">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " filterSupplyObjects -> ";
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "IK.SupplyObject.DataShape"
                                        });
                                        try {
                                        	if (supplyObjects && supplyObjects.getRowCount() > 0) {
                                        		if (status && status.getRowCount() > 0) {
                                        			let filter = [];
                                        			for (let i = 0; i < status.getRowCount(); i++) {
                                        				if (status.rows[i].item !== "(Blank)") {
                                        					filter.push({
                                        						"type": "EQ",
                                        						"fieldName": "status",
                                        						"value": status[i].item
                                        					});
                                        				}
                                        			}
                                        			let query = {
                                        				"filters": {
                                        					"filters": filter,
                                        					"type": "OR"
                                        				}
                                        			};
                                        			params = {
                                        				t: supplyObjects /* INFOTABLE */ ,
                                        				query: query /* QUERY */
                                        			};
                                        			supplyObjects = Resources["InfoTableFunctions"].Query(params);
                                        			logger.info(FN + "Supply objects filtered for status [" + JSON.stringify(query) + "]");
                                        		} else {
                                        			// result should be empty if status is empty
                                        			supplyObjects = result;
                                        			logger.info(FN + "Supply objects filtered without any status");
                                        		}
                                        
                                        
                                        		if (searchText) {
                                        			let filters = [{
                                        				"type": "LIKE",
                                        				"fieldName": "name",
                                        				"value": "%" + searchText + "%"
                                        			}, {
                                        				"type": "LIKE",
                                        				"fieldName": "type",
                                        				"value": "%" + searchText + "%"
                                        			}, {
                                        				"type": "LIKE",
                                        				"fieldName": "object_type",
                                        				"value": "%" + searchText + "%"
                                        			}, {
                                        				"type": "LIKE",
                                        				"fieldName": "supply_chain_actor",
                                        				"value": "%" + searchText + "%"
                                        			}, {
                                        				"type": "LIKE",
                                        				"fieldName": "country",
                                        				"value": "%" + searchText + "%"
                                        			}, {
                                        				"type": "LIKE",
                                        				"fieldName": "supply_object_id",
                                        				"value": "%" + searchText + "%"
                                        			}, {
                                        				"type": "LIKE",
                                        				"fieldName": "version",
                                        				"value": "%" + searchText + "%"
                                        			}, {
                                        				"type": "LIKE",
                                        				"fieldName": "status",
                                        				"value": "%" + searchText + "%"
                                        			}];
                                        
                                        			let query = {
                                        				"filters": {
                                        					"filters": filters,
                                        					"type": "OR"
                                        				}
                                        			};
                                        			params = {
                                        				t: supplyObjects /* INFOTABLE */ ,
                                        				query: query /* QUERY */
                                        			};
                                        
                                        			result = Resources["InfoTableFunctions"].Query(params);
                                        			logger.info(FN + "Supply objects filtered for search text [" + searchText + "].");
                                        		} else {
                                        			result = supplyObjects;
                                        			logger.info(FN + "Supply objects filtered without search text.");
                                        		}
                                        	}
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getActorTypes">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getActorTypes -> ";
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "IK.KeyValuePair.DataShape"
                                        });
                                        
                                        try {
                                        	let databaseConnector = Things["IK.CVM.Configuration"].getCVMDatabase();
                                        	let actorTypes = Things[databaseConnector].getSupplyChainActorTypes({
                                        		trade_good_type_id: trade_good_type_id
                                        	});
                                        	for (let i = 0; i < actorTypes.getRowCount(); i++) {
                                        		let actorType = actorTypes.rows[i];
                                        		let newEntry = new Object();
                                        		newEntry.key = actorType.SUPPLY_CHAIN_ACTOR_TYPE_ID;
                                        		newEntry.value = actorType.SUPPLY_CHAIN_ACTOR_TYPE;
                                        		result.AddRow(newEntry);
                                        
                                        	}
                                        	logger.info(FN + "Actor types loaded for [" + trade_good_type_id + "].");
                                        
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getCompanyDetails">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getCompanyDetails -> ";
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(CVM.SearchCompany.DataShape)
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "IK.SupplyObject.DataShape"
                                        });
                                        let productionDetailsIT = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "GenericStringList"
                                        });
                                        
                                        try{
                                            if(company_details){
                                                let subsupplier = company_details.rows[0];
                                                let newEntry = new Object();
                                        		newEntry.legal_name = subsupplier.legal_name;
                                        		newEntry.duns_number = subsupplier.duns_number;
                                        		newEntry.address = subsupplier.address;
                                        		newEntry.country = subsupplier.country;
                                        		newEntry.latitude = subsupplier.latitude;
                                        		newEntry.longtitude =subsupplier.longitude;
                                        		newEntry.gln_code = subsupplier.gln_code;
                                        		newEntry.legal_code = subsupplier.legal_code;
                                                newEntry.productionDetails = productionDetailsIT;
                                                result.AddRow(newEntry);
                                            }
                                        }catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getCountry">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(GenericStringList)
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "InfoTable",
                                            dataShapeName: "GenericStringList"
                                        });
                                        
                                        yourInfoTable.rows[yourIndex];
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getObjectTypes">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getObjectTypes -> ";
                                        
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "IK.KeyValue.DataShape"
                                        });
                                        try {
                                        	result.AddRow({
                                        		key: "Trade good",
                                        		value: "IK.CreateTradeGoodSupplyObject.Mashup"
                                        	});
                                        	result.AddRow({
                                        		key: "Transport",
                                        		value: "IK.CreateTransportSupplyObject.Mashup"
                                        	});
                                        	logger.info(FN + "Supply objects Object(TradeGood,Transport) type loaded.");
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getProductionUnit">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getProductionUnit -> ";
                                        
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "GenericStringList"
                                        });
                                        
                                        try {
                                        	if (sub_supplier_id) {
                                        		let databaseConnector = Things["IK.CVM.Configuration"].getCVMDatabase();
                                        
                                        		let productionDetails = Things[databaseConnector].getProductionDetailsForSubSupplier({
                                        			sub_supplier_id: parseInt(sub_supplier_id) /* STRING */
                                        		});
                                        		for (let i = 0; i < productionDetails.getRowCount(); i++) {
                                        			let subsupplier = productionDetails.rows[i];
                                        			result.AddRow({
                                        				item: subsupplier.PRODUCTION_UNIT
                                        			});
                                        		}
                                        	}
                                        	logger.info(FN + " Production units loaded successfully for subsupplier[" + sub_supplier_id + "].");
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getSubSupplierDetails">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getSubSupplierDetails -> ";
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "IK.SupplyObject.DataShape"
                                        });
                                        let productionDetailsIT = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "GenericStringList"
                                        });
                                        
                                        try {
                                        	if (supplier_id) {
                                        		let databaseConnector = Things["IK.CVM.Configuration"].getCVMDatabase();
                                        		let suppliers = Things[databaseConnector].getSubSupplierInfo({
                                        			supplier_id: supplier_id /* STRING */
                                        		});
                                        
                                        		let subsupplier = suppliers.rows[0];
                                        		let newEntry = new Object();
                                        		newEntry.legal_name = subsupplier.LEGAL_NAME;
                                        		newEntry.duns_number = "" + subsupplier.SUPPLIER_ID;
                                        		newEntry.address = subsupplier.ADDRESS;
                                        		newEntry.country = subsupplier.COUNTRY;
                                        //		let gps = (subsupplier.GPSCOORDINATES) ? subsupplier.GPSCOORDINATES.split(","): "";
                                        		newEntry.latitude = subsupplier.LATITUDE+ "°";
                                        		newEntry.longtitude = subsupplier.LONGITUDE + "°";
                                        		newEntry.gln_code = subsupplier.GLN_CODE;
                                        		newEntry.legal_code = subsupplier.LEGAL_CODE;
                                        
                                        		let productionDetails = Things[databaseConnector].getProductionDetailsForSubSupplier({
                                        			supplier_id: supplier_id /* STRING */
                                        		});
                                        		for (let i = 0; i < productionDetails.getRowCount(); i++) {
                                        			let subsupplier = productionDetails.rows[i];
                                        			productionDetailsIT.AddRow({
                                        				item: subsupplier.PRODUCTION_UNIT
                                        			});
                                        		}
                                        		newEntry.productionDetails = productionDetailsIT;
                                        		result.AddRow(newEntry);
                                        		logger.info(FN + "Subsupplier details fetched for [" + supplier_id + "].");
                                        	}
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getSuggestedCompany">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getSuggestedCompany -> ";
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(CVM.SubSupplierDetails.DataShape)
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "CVM.SearchCompany.DataShape"
                                        });
                                        
                                        try {
                                        	let companyResults = Things["CVM.DNB.Thing"].companyCriteriaSearchAllParameters({
                                        		primary_name: company_name /* STRING */ ,
                                        		page_number: undefined /* INTEGER {"defaultValue":1} */ ,
                                        		page_size: undefined /* INTEGER {"defaultValue":30} */
                                        	});
                                            
                                        //    companyResults = json;
                                        	if (companyResults.result.searchCandidates && companyResults.result.searchCandidates.length > 0) {
                                        		for (let i = 0; i < companyResults.result.searchCandidates.length; i++) {
                                        			let subsupplier = companyResults.result.searchCandidates[i].organization;
                                                    let duns = subsupplier.duns;
                                        			let name = subsupplier.primaryName;
                                        			let address = subsupplier.primaryAddress;
                                        			let addressLine1 = (address.streetAddress && address.streetAddress.line1) ? address.streetAddress.line1 : "";
                                        			let locality = (address.addressLocality && address.addressLocality.name ) ? address.addressLocality.name : "";
                                        			let postalCode = address.postalCode ? address.postalCode : "";
                                        			let country = address.addressCountry.name;
                                                    let latitude = address.latitude ? address.latitude :"" ;
                                        			let longitude = address.longitude ? address.longitude: "";
                                                    address = (addressLine1 + " " + locality + " "+ postalCode +" "+ country).trim();
                                        			let newEntry = new Object();
                                        			newEntry.display_name = "<p style=\"cursor: pointer;width: fit-content;\">" + name + "</p><p style=\color:#484848>" + address + "</p>";
                                                    if(latitude && longitude){
                                                    newEntry.gps_coordinates = {units : "WGS84", elevation : 0.0, latitude :latitude , longitude :longitude};
                                                    }
                                                    newEntry.duns_number = duns;
                                                    newEntry.legal_name = name;
                                                    newEntry.country = country;
                                                    newEntry.address = address;
                                                    newEntry.latitude = latitude ? latitude +  "°": "";
                                                    newEntry.longitude = longitude ? longitude +  "°": "";
                                                    newEntry.gln_code = "NA";
                                                    newEntry.legal_code = "NA";
                                                    result.AddRow(newEntry);
                                        		}
                                        	}
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getSuggestedDUNSNumber">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getSuggestedDUNSNumber -> ";
                                        
                                        try {
                                        	let databaseConnector = Things["IK.CVM.Configuration"].getCVMDatabase();
                                        	let suppliers = Things[databaseConnector].getSuggestedDUNSNumber({
                                        		text: "%" + text + "%" /* STRING */
                                        	});
                                        	let data = [];
                                        	for (let x = 0; x < suppliers.getRowCount(); x++) {
                                        		let supplier = suppliers.rows[x];
                                        		data.push({
                                        			"val": "" + supplier.SUPPLIER_ID,
                                        			"key": supplier.SUPPLIER_ID
                                        		});
                                        	}
                                        	result = {
                                        		"data": data
                                        	};
                                        	logger.info(FN + "Suggested DUNS number loaded for text [" + text + "].");
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getSuggestedLegalName">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getSuggestedLegalName -> ";
                                        
                                        try {
                                        	let databaseConnector = Things["IK.CVM.Configuration"].getCVMDatabase();
                                        	let suppliers = Things[databaseConnector].getSuggestedLegalName({
                                        		text: "%" + text + "%" /* STRING */
                                        	});
                                        	let data = [];
                                        	for (let x = 0; x < suppliers.getRowCount(); x++) {
                                        		let supplier = suppliers.rows[x];
                                        		data.push({
                                        			"val": supplier.LEGAL_NAME,
                                        			"key": supplier.SUPPLIER_ID
                                        		});
                                        	}
                                        	result = {
                                        		"data": data
                                        	};
                                        	logger.info(FN + "Suggested Legal name loaded for text [" + text + "]");
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getSupplyObjectDetails">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getSupplyObjectDetails -> ";
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "IK.SupplyObject.DataShape"
                                        });
                                        let databaseConnector = Things["IK.CVM.Configuration"].getCVMDatabase();
                                        try {
                                        	let odataconnectorthing = Things["IK.CVM.Configuration"].getOdataConnector();
                                        	let partJson = Things[odataconnectorthing].getParts({
                                        		$filter: "Number eq '" + number + "'"
                                        	});
                                        	let part = partJson.value[0];
                                        	var newEntry = new Object();
                                        	newEntry.supply_object_id = part.Number;
                                        	newEntry.object_type = part.ObjectType;
                                        	newEntry.version = part.Version;
                                        	newEntry.supply_object_oid = part.ID;
                                        
                                        	var attr = part.CVMClassification.ClassificationAttributes;
                                        	if (attr) {
                                        		for (var a = 0; a < attr.length; a++) {
                                        			if (attr[a].InternalName == "com.ikea.GDName") {
                                        				newEntry.name = attr[a].Value;
                                        			} else if (attr[a].InternalName == "com.ikea.GDType") {
                                        				newEntry.type = attr[a].Value == " " ? "" : attr[a].Value;
                                        			} else if (attr[a].InternalName == "com.ikea.GDTradeGoodID") {
                                        				newEntry.trade_good_id = attr[a].Value == " " ? "" : attr[a].Value;
                                        			} else if (attr[a].InternalName == "com.ikea.GDObjectClass") {
                                        				newEntry.object_type = attr[a].Value == " " ? "" : attr[a].Value;
                                        			} else if (attr[a].InternalName == "com.ikea.GDActorType") {
                                        				newEntry.actor_type = attr[a].Value == " " ? "" : attr[a].Value;
                                        			} else if (attr[a].InternalName == "com.ikea.GDTypeOfOperation") {
                                        				newEntry.type_of_operation = attr[a].Value == " " ? "" : attr[a].Value;
                                        			} else if (attr[a].InternalName == "com.ikea.GDLegalName") {
                                        				newEntry.legal_name = attr[a].Value == " " ? "" : attr[a].Value;
                                        			} else if (attr[a].InternalName == "com.ikea.GDSupplyChainActorID") {
                                                        newEntry.supplier_id = attr[a].Value == " " ? "" : attr[a].Value;
                                        				let subSupplierInDB = Things["IK.DatabaseConnector.Thing"].getSubSupplierInfo({
                                        		                  supplier_id: newEntry.supplier_id /* NUMBER */
                                        	                      }); 
                                                                newEntry.country = subSupplierInDB.COUNTRY;
                                                                newEntry.legal_name= subSupplierInDB.LEGAL_NAME;
                                                                newEntry.legal_code = subSupplierInDB.LEGAL_CODE;
                                                                newEntry.address = subSupplierInDB.ADDRESS;
                                                                newEntry.country= subSupplierInDB.COUNTRY;
                                                                newEntry.latitude= subSupplierInDB.LATITUDE;
                                                                newEntry.longtitude = subSupplierInDB.LONGITUDE;
                                                                newEntry.gln_code = subSupplierInDB.GLN_CODE;
                                                                newEntry.duns_number = subSupplierInDB.DUNS_NUMBER;
                                          
                                        			} else if (attr[a].InternalName == "com.ikea.GDStatus") {
                                        				newEntry.status = attr[a].Value == " " ? "" : attr[a].Value;
                                        			} else if (attr[a].InternalName == "com.ikea.GDProductionUnit") {
                                        				let productionUnit = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        					infoTableName: "InfoTable",
                                        					dataShapeName: "GenericStringList"
                                        				});
                                        				productionUnit.AddRow({
                                        					item: attr[a].Value == " " ? "" : attr[a].Value
                                        				});
                                        
                                        				newEntry.productionDetails = productionUnit;
                                        			}
                                        		}
                                        	}
                                        	result.AddRow(newEntry);
                                        	logger.info(FN + "Supply object details fetched for [" + number + "].");
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getSupplyObjects">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getSupplyObjects -> ";
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "IK.SupplyObject.DataShape"
                                        });
                                        
                                        try {
                                        	if (project_name) {
                                        		var libraryID = Things["IK.CVM.Configuration"].getSupplyPartsLibraryID();
                                        		var cabinetID = Things["IK.CVM.Configuration"].getSupplyPartCabinetID();
                                        		var odataconnectorthing = Things["IK.CVM.Configuration"].getOdataConnector();
                                        		var swaggerConnector = Things["IK.CVM.Configuration"].getWNCSwaggerConnector();
                                                let databaseConnector = Things["IK.CVM.Configuration"].getCVMDatabase();
                                        		 
                                        
                                        		var folderjson = Things[swaggerConnector].Get_Folders({
                                        			id: libraryID
                                        		});
                                        		var folderId;
                                        		if (folderjson !== undefined && folderjson.items !== undefined) {
                                        			var items = folderjson.items;
                                        			for (var i = 0; i < items.length; i++) {
                                        				var item = items[i];
                                        				if (item.attributes.name == project_name) {
                                        					folderId = item.id;
                                        				}
                                        			}
                                        		}
                                        
                                        		var subfolderjson = Things[swaggerConnector].Get_SubFolders({
                                        			id: folderId
                                        		});
                                        		var subfolderId;
                                        		if (subfolderjson !== undefined && subfolderjson.items !== undefined) {
                                        			var subfolderitems = subfolderjson.items;
                                        			for (var j = 0; j < subfolderitems.length; j++) {
                                        				var subfolderitem = subfolderitems[j];
                                        				if (subfolderitem.attributes.name == "Supply Objects") {
                                        					subfolderId = subfolderitem.id;
                                        				}
                                        			}
                                        		}
                                                
                                        
                                        		var supplyObjectsJson = Things[odataconnectorthing].getContentsFromSubFolder({
                                        			ContainerId: libraryID,
                                        			FolderId: cabinetID,
                                        			SubFolderId1: folderId,
                                        			SubFolderId2: subfolderId
                                        		});
                                        
                                        		for (var k = 0; k < supplyObjectsJson.value.length; k++) {
                                        			var obj = supplyObjectsJson.value[k];
                                        			var newEntry = new Object();
                                        			newEntry.supply_object_id = obj.Number;
                                        			newEntry.object_type = obj.ObjectType;
                                        			newEntry.version = obj.Version;
                                        			newEntry.supply_object_oid = obj.ID;
                                                    
                                        
                                        			var attr = obj.CVMClassification.ClassificationAttributes;
                                        			if (attr) {
                                        				for (var a = 0; a < attr.length; a++) {
                                                       	if (attr[a].InternalName == "com.ikea.GDName") {
                                        						newEntry.name = attr[a].Value;
                                        					} else if (attr[a].InternalName == "com.ikea.GDType") {
                                        						newEntry.type = attr[a].Value == "undefined" ? "" : attr[a].Value;
                                        					} else if (attr[a].InternalName == "com.ikea.GDObjectClass") {
                                        						newEntry.object_type = attr[a].Value == "undefined" ? "" : attr[a].Value;
                                        					} else if (attr[a].InternalName == "com.ikea.GDLegalName") {
                                        						newEntry.supply_chain_actor = attr[a].Value == "undefined" ? "" : attr[a].Value;
                                                             } else if (attr[a].InternalName == "com.ikea.GDStatus") {
                                        						newEntry.status = attr[a].Value;
                                                            } else if (attr[a].InternalName == "com.ikea.GDSupplyChainActorID") {
                                        						newEntry.supplier_id = attr[a].Value == "undefined" ? "" : attr[a].Value;
                                                              let subSupplierInDB = Things["IK.DatabaseConnector.Thing"].getSubSupplierInfo({
                                        		                  supplier_id: newEntry.supplier_id /* NUMBER */
                                        	                      }); 
                                                                newEntry.country = subSupplierInDB.COUNTRY;
                                                                newEntry.supply_chain_actor= subSupplierInDB.LEGAL_NAME;
                                        
                                        					}
                                                            
                                        				}
                                                        
                                        			}
                                        			if (newEntry.status == "Active" && newEntry.object_type != "Transport") {
                                        				newEntry.action = "<img style=\"cursor: pointer; padding-bottom:1px;\" height=\"24px !important\" width=\"24px !important\" src='/Thingworx/MediaEntities/IK.ViewIcon.Media' onclick=\"viewSupplyObject('" + newEntry.supply_object_id + "')\" /><img style=\"cursor: pointer;  padding-left: 10px;\" height=\"24px !important\" width=\"24px !important\" src='/Thingworx/MediaEntities/IK.Media.Skapa.Pencil' onclick=\"editSupplyObject('" + newEntry.supply_object_id + "')\"/>";
                                        			} else if (newEntry.status == "Archived" && newEntry.object_type != "Transport") {
                                        				newEntry.action = "<img style=\"cursor: pointer; padding-bottom:1px;\" height=\"24px !important\" width=\"24px !important\" src='/Thingworx/MediaEntities/IK.ViewIcon.Media' /><img style=\"cursor: pointer;  padding-left: 10px;\" height=\"24px !important\" width=\"24px !important\" src='/Thingworx/MediaEntities/IK.EditIconDisabled.Media'/>";
                                        			} else {
                                        				newEntry.action = "<img style=\"cursor: pointer; padding-bottom:1px;\" height=\"24px !important\" width=\"24px !important\" src='/Thingworx/MediaEntities/IK.ViewIcon.Media' /><img style=\"cursor: pointer;  padding-left: 10px;\" height=\"24px !important\" width=\"24px !important\" src='/Thingworx/MediaEntities/IK.Media.Skapa.Pencil'/>";
                                        			} 
                                        
                                        
                                        			result.AddRow(newEntry);
                                        		}
                                        	}
                                        	let localInfoTable = result;
                                        	let sort = {
                                        		name: "supply_object_id",
                                        		ascending: false
                                        	};
                                        	localInfoTable.Sort(sort);
                                        	result = localInfoTable;
                                        
                                        	logger.info(FN + "Supply objects fetched for [" + project_name + "].");
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getSupplyObjectStatus">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getSupplyObjectStatus -> ";
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "GenericStringList"
                                        });
                                        try {
                                        	result.AddRow({
                                        		item: "Active"
                                        	});
                                        	result.AddRow({
                                        		item: "Archived"
                                        	});
                                        
                                        	logger.info(FN + " Supply object status(Active,Archived) loaded.");
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getTradeGoodTypes">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getTradeGoodTypes -> ";
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "IK.KeyValuePair.DataShape"
                                        });
                                        
                                        try {
                                        	let databaseConnector = Things["IK.CVM.Configuration"].getCVMDatabase();
                                        	let tradeGoodTypes = Things[databaseConnector].getTradeGoodTypes();
                                        	for (let i = 0; i < tradeGoodTypes.getRowCount(); i++) {
                                        		let tradeGoodType = tradeGoodTypes.rows[i];
                                        		let newEntry = new Object();
                                        		newEntry.key = tradeGoodType.TRADE_GOOD_TYPE_ID;
                                        		newEntry.value = tradeGoodType.TRADE_GOOD_TYPE;
                                        		result.AddRow(newEntry);
                                        	}
                                        
                                        	logger.info(FN + "Trade good types loaded successfully.");
                                        
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getTypeOfOperations">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getTypeOfOperations -> ";
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "IK.KeyValuePair.DataShape"
                                        });
                                        
                                        try {
                                        	let databaseConnector = Things["IK.CVM.Configuration"].getCVMDatabase();
                                        	let typeOfOperations = Things[databaseConnector].getTypeOfOperations({
                                        		trade_good_type_id: trade_good_type_id,
                                        		supply_chain_actor_type_id: supply_chain_actor_type_id
                                        	});
                                        	for (let i = 0; i < typeOfOperations.getRowCount(); i++) {
                                        		let typeOfOperation = typeOfOperations.rows[i];
                                        		let newEntry = new Object();
                                        		newEntry.key = typeOfOperation.TYPE_OF_OPERATION_ID;
                                        		newEntry.value = typeOfOperation.TYPE_OF_OPERATION;
                                        		result.AddRow(newEntry);
                                        	}
                                        	logger.info(FN + "Types of operations loaded successfully for Trade good type ID [" + trade_good_type_id + "] and Supply actor type ID [" + supply_chain_actor_type_id + "] for Trade good type");
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="getTypeOfOperationsForTransport">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " getTypeOfOperationsForTransport -> ";
                                        let result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                        	infoTableName: "InfoTable",
                                        	dataShapeName: "GenericStringList"
                                        });
                                        try {
                                        	result.AddRow({
                                        		item: "Road"
                                        	});
                                        	result.AddRow({
                                        		item: "Rail"
                                        	});
                                        	result.AddRow({
                                        		item: "Air"
                                        	});
                                        	result.AddRow({
                                        		item: "Water"
                                        	});
                                        	logger.info(FN + "Types of operations loaded for Transport type.");
                                        
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="isFieldsEdited">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " isFieldsEdited -> ";
                                        
                                        try {
                                        	if ((type_of_operations && type_of_operations.getRowCount() > 0) || supply_object_type || supply_object_name || trade_good_id || actor_type || type_of_operation || legal_name || duns_number || production_unit) {
                                        		result = true;
                                        	} else {
                                        		result = false;
                                        	}
                                        	logger.info(FN + "[" + result + "].");
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="validateEditSupplyObject">
                        <ConfigurationTables>
                            <ConfigurationTable
                             dataShapeName=""
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        const FN = me.name + " validateEditSupplyObject -> ";
                                        
                                        try {
                                        	if (supplyObject && supplyObject.getRowCount() > 0) {
                                        		let supplyObj = supplyObject.rows[0];
                                        		let prod_unit = "";
                                        		if (supplyObj.productionDetails && supplyObj.productionDetails.getRowCount() > 0) {
                                        			prod_unit = supplyObj.productionDetails.rows[0].item;
                                        		}
                                        
                                        		if (type != supplyObj.type || name != supplyObj.name || trade_good_id != supplyObj.trade_good_id || actor_type != supplyObj.actor_type || type_of_operation != supplyObj.type_of_operation || legal_name != supplyObj.legal_name || duns_number != supplyObj.duns_number || production_unit != prod_unit) {
                                        			result = true;
                                        		} else {
                                        			result = false;
                                        		}
                                        		logger.info(FN + "[" + result + "] for supply object [" + supplyObject.rows[0].supply_object_id + "]");
                                        	} else {
                                        		result = false;
                                        		logger.info(FN + "[" + result + "]");
                                        	}
                                        
                                        } catch (err) {
                                        	logger.error(FN + "Line" + err.lineNumber + ": " + err);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties></ThingProperties>
        </Thing>
    </Things>
</Entities>
